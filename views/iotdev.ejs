<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- <title>Welcome</title> -->
    <link type="text/css" rel="stylesheet" href="/css/component-sidebar.css" />
    <link type="text/css" rel="stylesheet" href="/css/addpage.css" />
    <link type="text/css" rel="stylesheet" href="/css/body.css" />
    <link type="text/css" rel="stylesheet" href="/css/navtools.css" />
    <link type="text/css" rel="stylesheet" href="/css/iotdev.css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
        integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous" />

    <script type="text/javascript" src="/function/plotgraph.js"></script>
    <script src='https://cdn.plot.ly/plotly-latest.min.js'></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
        integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"
        crossorigin="anonymous"></script>
</head>

<body>
    <%- include ("./component/sidebar.ejs") -%>
        <div>
            <h1>
                <%= nameiotdev %>
            </h1>
        </div>
        <br />
        <div id="navtools">
            <div class="inputfind">
                <img class="search" src="/img/search.png" alt="search" />
                <input id="findname" type="text" placeholder="Search...">
            </div>
            <div id="copyapi">
                <button type="button" class="btn btn-success" name="buttonnav" data-toggle="modal"
                    data-target="#AddGraph">@Graph</button>
            </div>
        </div>
        <br />
        <div class="container-flex" id="creategraph">
        </div>

        <div class="modal fade" id="AddGraph" tabindex="-1" aria-labelledby="AddGraph" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Add Graph</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group row">
                                <label for="GraphName" class="col-sm-2 col-form-label">Name</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="GraphName" placeholder="Graph name...">
                                    <small id="alertname" class="form-text text-muted">
                                    </small>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-2">Graph</div>
                                <div class="col-sm-10">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="flexRadioDefault"
                                            id="flexRadioDefault1">
                                        <label class="form-check-label" for="flexRadioDefault1">
                                            lines+markers
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="flexRadioDefault"
                                            id="flexRadioDefault2">
                                        <label class="form-check-label" for="flexRadioDefault2" id="inputStateGraph">
                                            scattermapbox
                                        </label>
                                    </div>
                                    <small id="alertstategraph" class="form-text text-muted"></small>
                                </div>
                            </div>
                            <div class="form-group row" id="foradddata">
                                <label for="choosedata" class="col-sm-2 col-form-label">Data</label>
                                <!-- new  -->
                                <div class="col-sm-8" id="inputState">
                                </div>
                                <button type="button" class="btn btn-success" id="adddatabutton">+</button>
                                <button type="button" class="btn btn-danger" id="deldatabutton">-</button>
                            </div>
                            <div class="form-group row" id="smallexdata">
                                <label class="col-sm-2 col-form-label"></label>
                                <div class="col-sm-8">
                                    <small id="alldata" class="form-text text-muted"></small>
                                    <small id="alertstatedata" class="form-text text-muted"></small>
                                </div>
                            </div>
                            <div class="form-group row" id="hiddeny">
                                <label for="GraphName" class="col-sm-2 col-form-label">Y-axis</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="yaxis" placeholder="Name...">
                                    <small id="alertname" class="form-text text-muted">
                                    </small>
                                </div>
                            </div>
                            <div class="form-group row" id="hiddenu">
                                <label for="GraphName" class="col-sm-2 col-form-label">Unit</label>
                                <div class="col-sm-10" id="unitinput">
                                    <input type="text" class="form-control" id="unit0" placeholder="Unit...">
                                </div>
                            </div>
                            <div class="form-group row" id="hiddencolor">
                                <label for="GraphColor" class="col-sm-2 col-form-label">Color</label>
                                <div class="col-sm-5" id="gcolor">
                                    <input type="color" class="form-control form-control-color" id="GraphColor0"
                                        value="#bdbdbd" title="Choose your color" name="GraphColor">
                                </div>
                            </div>
                            <right>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" id="submit" class="btn btn-primary">Submit</button>
                            </right>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="confirmModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Delete</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="toglemessage">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" id="closedelete"
                            data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="Confirmdelete"
                            data-dismiss="modal">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
</body>

<script>
    class plotline {
        constructor(mode, rawdata, position, color) {
            this.plot = {
                type: "scatter",
                mode: mode,
                x: plottime(rawdata),
                y: plotgraph(rawdata, position),
                line: { color: color }
            }
        }
    }
    $(document).ready(() => {
        var addnum = 1;
        var numdata = splitdata(`<%= exampledata[exampledata.length - 1].data %>`);
        var typeg = "";
        $(`<select id="inputStatedata0" class="form-control" name="listdata">
            <option selected disabled>Choose...</option>
            </select>
            `).appendTo("#inputState")
        for (let k = 0; k < numdata.length; k++) {
            $(`<option class="forline">data ${k + 1}</option> `).appendTo("select[name=listdata]");
            $(`<small class="forline">data ${k + 1}: ${numdata[k]},...</small></br>`).appendTo("#alldata");
        }
        $("#flexRadioDefault2").click((e) => {
            $("#gcolor").empty();
            $("#inputState").empty();
            addnum = 1;
            // addnum += 1;
            $(`<input type="color" class="form-control form-control-color" id="GraphColor0"
            value="#bdbdbd" title="Choose your color" name="GraphColor">`).appendTo("#gcolor");
            for (let l = 0; l <= addnum; l++) {
                $(`<select id="inputStatedata${l}" class="form-control" name="listdata">
                <option selected disabled>Choose...Latitude</option>
                </select>`).appendTo("#inputState")
            }
            for (let k = 0; k < numdata.length; k++) {
                $(`<option class="forline">data ${k + 1}</option> `).appendTo("select[name=listdata]");
            }
            $("#adddatabutton").hide();
            $("#deldatabutton").hide();
            $("#hiddeny").hide();
            $("#hiddenu").hide();
            typeg = "scattermapbox";
        })
        $("#flexRadioDefault1").click((e) => {
            addnum = 0;
            $("#unitinput").empty();
            $("#inputState").empty();
            $("#gcolor").empty();
            $(`<select id="inputStatedata0" class="form-control" name="listdata">
            <option selected disabled>Choose...</option>
            </select>`).appendTo("#inputState");
            $(`<input type="color" class="form-control form-control-color" id="GraphColor0"
            value="#bdbdbd" title="Choose your color" name="GraphColor">`).appendTo("#gcolor");
            $(`<input type="text" class="form-control" id="unit0" placeholder="Unit..." name="GraphColor">`).appendTo('#unitinput');
            for (let k = 0; k < numdata.length; k++) {
                $(`<option class="forline">data ${k + 1}</option> `).appendTo("select[name=listdata]");
            }
            $("#adddatabutton").show();
            $("#deldatabutton").show();
            $("#hiddeny").show();
            $("#hiddenu").show();
            typeg = "lines+markers";
        })
        $("#adddatabutton").click((e2) => {
            addnum += 1;
            $(`<select id="inputStatedata${addnum}" class="form-control" name="listdata">
            <option selected disabled>Choose...</option>
            </select>`).appendTo("#inputState")
            $(`<input type="color" class="form-control form-control-color" id="GraphColor${addnum}"
            value="#bdbdbd" title="Choose your color" name="GraphColor">`).appendTo("#gcolor")
            $(`<input type="text" class="form-control" id="unit${addnum}" placeholder="Unit..." name="GraphColor">`).appendTo('#unitinput');
            for (let k = 0; k < numdata.length; k++) {
                $(`<option class="forline">data ${k + 1}</option> `).appendTo(`#inputStatedata${addnum}`);
            }
        })
        $("#deldatabutton").click((e2) => {
            if (addnum !== 1) {
                $(`#inputStatedata${addnum}`).remove();
                $(`#GraphColor${addnum}`).remove();
                $(`#unit${addnum}`).remove();
                addnum -= 1;
            }
        })
        $("#submit").click((e) => {
            e.preventDefault();
            var arraydata = [];
            var arraycolor = [];
            var arrayunit = [];
            $("#alertname").empty();
            $("#alertstatedata").empty();
            $("#alertstategraph").empty();
            for (let k = 0; k < addnum + 1; k++) {
                arraydata.push($(`#inputStatedata${k}`).val().replace(/[^0-9.]/g, "") - 1);
            }
            if (typeg === "lines+markers") {
                for (let k = 0; k < addnum + 1; k++) {
                    arraycolor.push($(`#GraphColor${k}`).val().replace(/#/g, ""));
                    arrayunit.push($(`#unit${k}`).val());
                }
            } else {
                arraycolor.push($(`#GraphColor0`).val().replace(/#/g, ""));
            }
            if ($("#GraphName").val() === "") {
                $("#alertname").append("please full fill name.")
            } else if ($("#inputStatedata0").val() === null || $("#inputStatedata0").val() === undefined) {
                $("#alertstatedata").append("please choose data.")
            } else if (typeg === "") {
                $("#alertstategraph").append("please choose type.")
            } else {
                console.log(arraycolor);
                console.log(arraydata);
                $.ajax({
                    url: `/apiput/dashboard/<%= nameiotdev %>`,
                    type: 'PUT',
                    data: ({ graphname: $("#GraphName").val(), datapositon: [...arraydata], typegraph: typeg, colorgraph: arraycolor, xaxis: arrayunit, yaxis: $("#yaxis").val() }),
                    success: (data) => {
                        // console.log($("#inputStatedata").val());
                        $("#GraphName").val('');
                        $('#inputStatedata').val('Choose...');
                        $('#inputStateGraph').val('Choose...');
                        $('#AddGraph').modal('hide');
                        location.reload();
                    },
                })
            }
        })
        // $(`< div class= "list-graph" > hello</div > `).appendTo('#creategraph');
        $.ajax({
            url: `/apiget/n/<%= nameiotdev %>`,
            type: 'GET',
            success: (datagraph) => {
                var rawdata = datagraph.graph.slice(1, datagraph.graph.length);
                // console.log(rawdata[0].data[0].split(","));
                if (datagraph.iotgraph.length === 0) {
                    $('<div id="alertaddgraph">Please add data graph.</div>').appendTo('#creategraph');
                } else {
                    datagraph.iotgraph.forEach((e) => {
                        if (e.typegraph === "lines+markers") {
                            $(`<div class="list-graph">
                                    <div class="closebutton" onclick="todeletegraph('${datagraph.name}','${e._id}')">&times;</div>
                                    <div id="name-G">${e.graphname}</div>
                                    <div class="data-graph" id="${e._id}"></div>
                                    <div class="trackgraph" id="trackgraph${e._id}">
                                    </div>`).appendTo('#creategraph');
                            for (let k = 0; k < e.dataposition.length; k++) {
                                $(`<div><span style="background-color: #${e.color[k]};" class="dot"></span>${e.xaxis[k]}</div>`).appendTo(`#trackgraph${e._id}`);
                            }
                            // var trace1 = {
                            //     type: "scatter",
                            //     mode: `${e.typegraph}`,
                            //     // name: 'AAPL High',
                            //     x: plottime(rawdata),
                            //     y: plotgraph(rawdata, `${e.dataposition}`),
                            //     line: { color: `#${e.color}` }
                            // }
                            console.log(e.dataposition, e.color);
                            var data = [];
                            for (let i = 0; i < e.dataposition.length; i++) {
                                data.push(new plotline(`${e.typegraph}`, rawdata, `${e.dataposition[i]}`, `#${e.color[i]}`).plot)
                            }
                            // var data = [new plotline(`${e.typegraph}`, rawdata, `${e.dataposition}`, `#${e.color}`).plot];
                            let yaxis = e.yaxis !== undefined ? `${e.yaxis}` : `Data${e.dataposition}`;
                            var layout = {
                                xaxis: {
                                    title: {
                                        text: 'Date',
                                        font: {
                                            family: 'Courier New, monospace',
                                            size: 18,
                                            color: '#7f7f7f'
                                        }
                                    },
                                    autorange: true,
                                    type: 'date'
                                },
                                yaxis: {
                                    title: {
                                        text: yaxis,
                                        font: {
                                            family: 'Courier New, monospace',
                                            size: 18,
                                            color: '#7f7f7f'
                                        }
                                    },
                                    autorange: true,
                                    type: 'linear'
                                },
                                showlegend: false
                            };

                            Plotly.newPlot(`${e._id}`, data, layout);
                        } else if (e.typegraph === "scattermapbox") {
                            $(`<div class="list-graph">
                                        <div class="closebutton" onclick="todeletegraph('${datagraph.name}','${e._id}')">&times;</div>
                                        <div id="name-G">${e.graphname}</div>
                                        <div class="data-graph" id="${e._id}"></div>
                                        <div class="trackgraph">
                                            <div class="Header">
                                            <span style="background-color: #${e.color};" class="dot"></span>Bookmarks</div>
                                            <div class="Subhead" id="${e._id + 'Subhead'}">
                                            <table>
                                                <tr>
                                                    <th>number/</th>
                                                    <th>time/</th>
                                                    <th>lat/</th>
                                                    <th>lon</th>
                                                </tr>
                                            </table>
                                            </div>
                                            <table>
                                                <div class="listtrack" id="${e._id + 'list'}"></div>
                                            </table>
                                        </div>`).appendTo('#creategraph');
                            var data = [];
                            console.log(e.color[0]);
                            // var count = unpack(rows, 'cnt');
                            if (e.dataposition.length === 2) {
                                var Lats = plotgraph(rawdata, e.dataposition[0]);
                                var Lons = plotgraph(rawdata, e.dataposition[1]);
                            } else {
                                var Lons = plotmap(rawdata, 0, 1);
                                var Lats = plotmap(rawdata, 0, 0);
                            }
                            // `${e.dataposition}`
                            for (var i = 0; i < rawdata.length - 1; i++) {
                                $(`<tr> <td>${i + 1}</td><td> ${plottime(rawdata)[i]}</td> <td>${Lons[i]}</td><td>${Lats[i]}</td> </tr>`).appendTo(`#${e._id + 'list'}`);
                                // var opacityValue = count[i] / getMaxOfArray(count);

                                var result = {
                                    type: 'scattermapbox',
                                    name: `${i + 1}`,
                                    // locationmode: 'USA-states',
                                    lon: [Lons[i], Lons[i + 1]],
                                    lat: [Lats[i], Lats[i + 1]],
                                    mode: 'lines',
                                    line: {
                                        width: 2,
                                        color: `#${e.color}`
                                    },
                                    // opacity: opacityValue
                                };

                                data.push(result);
                            };

                            var layout = {
                                // title: 'Feb. 2011 American Airline flight paths',
                                showlegend: false,
                                mapbox: {
                                    style: "stamen-terrain",
                                    center: { lon: Lons[0], lat: Lats[0] },
                                    zoom: 5
                                },
                            };

                            Plotly.newPlot(`${e._id}`, data, layout, { showLink: false });
                        }
                    });
                }
            }
        })
    })
    function todeletegraph(nameiotdev, id) {
        $(document).ready((e) => {
            $('#confirmModal').modal('toggle');
            $('#toglemessage').text(`Are you sure to delete ?`)
            $("#Confirmdelete").on('click', () => {
                $.ajax({
                    url: `/apidelete/graph/${nameiotdev}/${id}`,
                    type: 'GET',
                    // success: (suc) => { alert("already") },
                    error: (err) => { // error it's not run while using it
                        console.log(id);
                        $('#errmessage').text(`Can not find ${id} in database.`);
                        $('#errModal').modal('toggle');
                    }
                })
                location.reload();
            })
        })
    }
</script>

</html>